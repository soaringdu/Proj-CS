function [fitresult, gof] = fit_gauss2d(X, Y, a)
%CREATEFIT(X,Y,A)
%  Create a fit.
%
%  Data for '2d_gauss' fit:
%      X Input : X
%      Y Input : Y
%      Z Output: a
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 18-Jan-2018 17:19:15


%% Fit: '2d_gauss'.
[xData, yData, zData] = prepareSurfaceData( X, Y, a );
baseline = min(a(:)); % baseline
amplitude = max(a(:)); % amplitude
[~, xc] = max(sum(a)); % xc: the max response in line,每列求和，算出和最大的一列
[~, yc] = max(sum(a,2)); % 每行求和，算出和最大的一行
theta = pi/2;
% Set up fittype and options.
ft = fittype( 'c0 + c1 * exp(-((x-c2)*cos(c3)+(y-c4)*sin(c3)).^2/(2*c5^2) - ( - (x-c2)*sin(c3)+(y-c4)*cos(c3)).^2 /(2*c6^2))', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
%% new! correct!
opts.Lower = [baseline amplitude yc-10 0 xc-10 0 0]; % yc-3 xc-3 for hcrt project
opts.StartPoint = [baseline amplitude yc theta xc 1 1];
opts.Upper = [amplitude 2*amplitude yc+10 pi xc+10 30 30]; % yc+3 xc+3 for hcrt project
%% wrong wrong wrong
% opts.Lower =      [baseline  amplitude  1   pi/2  1  0  0];
% opts.StartPoint = [baseline  amplitude   xc  theta yc 1  1];
% opts.Upper =      [amplitude 2*amplitude 8   pi/2  8  30 30];
%%
%              c0   % baseline
  ...          c1   % amplitude
  ...          c2   % x center
  ...          c3   % theta
  ...          c4   % y center
  ...          c5   % x sigma
  ...          c6   % y sigma

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );
%
plot(fitresult);
% Plot fit with data.
figure( 'Name', '2d_gauss' );
h = plot( fitresult, [xData, yData], zData );
legend( h, '2d_gauss', 'a vs. X, Y', 'Location', 'NorthEast' );
% label axes
xlabel X
ylabel Y
zlabel a
grid on
view( 26.9, 63.6 );
title(['adjrsquare = ',num2str(gof.adjrsquare)])
% 

